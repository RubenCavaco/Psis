/* Generated by the protocol buffer compiler.  DO NOT EDIT! */
/* Generated from: score_update.proto */

#ifndef PROTOBUF_C_score_5fupdate_2eproto__INCLUDED
#define PROTOBUF_C_score_5fupdate_2eproto__INCLUDED

#include <protobuf-c/protobuf-c.h>

PROTOBUF_C__BEGIN_DECLS

#if PROTOBUF_C_VERSION_NUMBER < 1000000
# error This file was generated by a newer version of protoc-c which is incompatible with your libprotobuf-c headers. Please update your headers.
#elif 1004001 < PROTOBUF_C_MIN_COMPILER_VERSION
# error This file was generated by an older version of protoc-c which is incompatible with your libprotobuf-c headers. Please regenerate this file with a newer version of protoc-c.
#endif


typedef struct ScoreUpdate ScoreUpdate;
typedef struct ScoreUpdates ScoreUpdates;


/* --- enums --- */


/* --- messages --- */

struct  ScoreUpdate
{
  ProtobufCMessage base;
  /*
   * ID do personagem (caracter)
   */
  int32_t ch;
  /*
   * Pontuação do personagem
   */
  int32_t score;
};
#define SCORE_UPDATE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&score_update__descriptor) \
    , 0, 0 }


struct  ScoreUpdates
{
  ProtobufCMessage base;
  /*
   * Lista de pontuações
   */
  size_t n_scores;
  ScoreUpdate **scores;
};
#define SCORE_UPDATES__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&score_updates__descriptor) \
    , 0,NULL }


/* ScoreUpdate methods */
void   score_update__init
                     (ScoreUpdate         *message);
size_t score_update__get_packed_size
                     (const ScoreUpdate   *message);
size_t score_update__pack
                     (const ScoreUpdate   *message,
                      uint8_t             *out);
size_t score_update__pack_to_buffer
                     (const ScoreUpdate   *message,
                      ProtobufCBuffer     *buffer);
ScoreUpdate *
       score_update__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   score_update__free_unpacked
                     (ScoreUpdate *message,
                      ProtobufCAllocator *allocator);
/* ScoreUpdates methods */
void   score_updates__init
                     (ScoreUpdates         *message);
size_t score_updates__get_packed_size
                     (const ScoreUpdates   *message);
size_t score_updates__pack
                     (const ScoreUpdates   *message,
                      uint8_t             *out);
size_t score_updates__pack_to_buffer
                     (const ScoreUpdates   *message,
                      ProtobufCBuffer     *buffer);
ScoreUpdates *
       score_updates__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   score_updates__free_unpacked
                     (ScoreUpdates *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*ScoreUpdate_Closure)
                 (const ScoreUpdate *message,
                  void *closure_data);
typedef void (*ScoreUpdates_Closure)
                 (const ScoreUpdates *message,
                  void *closure_data);

/* --- services --- */


/* --- descriptors --- */

extern const ProtobufCMessageDescriptor score_update__descriptor;
extern const ProtobufCMessageDescriptor score_updates__descriptor;

PROTOBUF_C__END_DECLS


#endif  /* PROTOBUF_C_score_5fupdate_2eproto__INCLUDED */
